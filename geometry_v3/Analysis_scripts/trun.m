%TRUN truncates cumulative record at significant change points% Works for both cumulative responses vs trials and cumulative events vs time% that is, it works for both discrete and continuous cumulative records% Syntax is [Cumt Lt r]=trun(Cum,R,L,Crit)% All input arguments obligatory% Cum is cumulative vector (cumulative interevent intervals or cumulative responses)% R is putative change point vector% L is pseudologit vector, where logit is (approximately) the log of the odds that% there has been an CP;% Crit is decision criterion on logit;% Cumt is truncated cumulative record,% the record as it would be if observation began at time CP+ or after trial CP% Lt is the L vector truncated at Alert, which is the row at which an CP was detected% r is row at which it was truncated. All arguments are returned as empty% when there is no significant change pointfunction [Cumt, Lt, r] = trun(Cum,R,L,Crit)La=abs(L);Alert=min(find(La>Crit)); % Finds first row where decision criterion is exceeded% If there is no such row, then Alert will be emptyif isempty(Alert)		Cumt=Cum; r=Alert; Lt=L;		return; % Returns the input Cum, input L & r = [] when there are no sig CPs	end;r=R(Alert); % The putative change point at the value of Cum that first yields significant logit.% This putative change point is always the number of an earlier event or trialI=[Cum(1);diff(Cum)]; % Interevent interval vector OR vector of responses on successive trialsCumt=cumsum(I(r+1:end)); % Truncated cumulative recordLt=L(1:Alert); % Truncated logit vectorend